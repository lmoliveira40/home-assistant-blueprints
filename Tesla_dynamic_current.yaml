blueprint:
  name: Tesla - Carregamento Solar Inteligente (Teslemetry + Shelly)
  description: >
    Controla automaticamente o carregamento do Tesla de acordo com o excedente solar medido por um Shelly.
    Inicia o carregamento quando h√° exporta√ß√£o (negativa) e pausa quando o consumo da rede √© superior a 80 W.
    Ajusta dinamicamente a corrente a cada 15 s.
  domain: automation
  input:
    sensor_consumo:
      name: Sensor de Consumo (Shelly)
      description: Sensor que mede o consumo/exporta√ß√£o (positivo = consumindo, negativo = exportando)
      selector:
        entity:
          domain: sensor

    number_charge_current:
      name: Corrente de Carregamento (A)
      description: Entidade do tipo "number" usada para definir a corrente de carregamento do Tesla.
      selector:
        entity:
          domain: number

    binary_charge_cable:
      name: Cabo Conectado
      description: Entidade bin√°ria que indica se o cabo est√° conectado ao Tesla.
      selector:
        entity:
          domain: binary_sensor

    tesla_vehicle:
      name: Ve√≠culo Tesla
      description: Entidade principal do ve√≠culo Tesla (usada para iniciar/parar o carregamento).
      selector:
        entity:
          integration: teslemetry

    max_amps:
      name: Corrente M√°xima (A)
      default: 16
      selector:
        number:
          min: 5
          max: 32
          unit_of_measurement: A

    min_amps:
      name: Corrente M√≠nima (A)
      default: 5
      selector:
        number:
          min: 1
          max: 16
          unit_of_measurement: A

    delta_positivo:
      name: Limiar de Consumo Positivo (W)
      description: Quando o consumo ultrapassa esse valor, a corrente ser√° reduzida ou o carregamento ser√° pausado.
      default: 80
      selector:
        number:
          min: 50
          max: 1000
          unit_of_measurement: W

    delta_negativo:
      name: Limiar de Exporta√ß√£o Negativa (W)
      description: Quando a exporta√ß√£o ultrapassa esse valor (negativo), o carregamento ser√° iniciado.
      default: -200
      selector:
        number:
          min: -2000
          max: -50
          unit_of_measurement: W

    delay_ajuste:
      name: Tempo entre ajustes
      description: Tempo m√≠nimo (em segundos) entre altera√ß√µes da corrente de carregamento.
      default: 15
      selector:
        number:
          min: 5
          max: 120
          unit_of_measurement: s

variables:
  input_sensor_consumo: !input sensor_consumo
  input_number_charge_current: !input number_charge_current
  input_binary_charge_cable: !input binary_charge_cable
  input_tesla_vehicle: !input tesla_vehicle
  max_amps: !input max_amps
  min_amps: !input min_amps
  delta_pos: !input delta_positivo
  delta_neg: !input delta_negativo
  delay_ajuste: !input delay_ajuste

trigger:
  - platform: state
    entity_id: !input sensor_consumo
    for: "00:00:10"

  - platform: state
    entity_id: !input sensor_consumo
    to: "unknown"
    for: "00:01:00"

condition:
  - condition: state
    entity_id: !input binary_charge_cable
    state: "on"

action:
  - variables:
      consumo: "{{ states(input_sensor_consumo) | float }}"
      amps_atual: "{{ states(input_number_charge_current) | int }}"

  - choose:
      # üöÄ Iniciar carregamento e aumentar corrente quando h√° exporta√ß√£o solar
      - conditions: "{{ consumo < delta_neg }}"
        sequence:
          - service: teslemetry.start_charging
            target:
              entity_id: !input tesla_vehicle
          - delay: "00:00:05"
          - service: number.set_value
            target:
              entity_id: !input number_charge_current
            data:
              value: "{{ [amps_atual + 1, max_amps] | min }}"

      # ‚ö° Reduzir corrente se o consumo da rede for alto
      - conditions: "{{ consumo > delta_pos and amps_atual > min_amps }}"
        sequence:
          - service: number.set_value
            target:
              entity_id: !input number_charge_current
            data:
              value: "{{ [amps_atual - 1, min_amps] | max }}"

      # üõë Parar carregamento se estiver a puxar da rede (consumo > limiar positivo)
      - conditions: "{{ consumo > delta_pos }}"
        sequence:
          - service: teslemetry.stop_charging
            target:
              entity_id: !input tesla_vehicle

  - delay:
      seconds: !input delay_ajuste

mode: single
