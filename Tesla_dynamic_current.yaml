blueprint:
  name: Tesla - Carregamento Dinâmico Solar
  description: Ajusta automaticamente a corrente do Tesla com base na produção/consumo solar
  domain: automation
  input:
    sensor_consumo:
      name: Sensor de Consumo (W)
      description: Consumo positivo = consumindo, negativo = exportando
      selector:
        entity:
          domain: sensor

    number_charge_current:
      name: Corrente do Carregamento (A)
      description: Entidade "number" que controla a corrente do Tesla
      selector:
        entity:
          domain: number

    binary_charge_cable:
      name: Cabo Conectado
      description: Indica se o cabo está conectado
      selector:
        entity:
          domain: binary_sensor

    max_amps:
      name: Corrente Máxima (A)
      default: 16
      selector:
        number:
          min: 5
          max: 32
          unit_of_measurement: A

    min_amps:
      name: Corrente Mínima (A)
      default: 5
      selector:
        number:
          min: 1
          max: 16
          unit_of_measurement: A

trigger:
  - platform: state
    entity_id: !input sensor_consumo
    for: "00:00:10"  # verifica a cada 10 segundos

condition:
  - condition: state
    entity_id: !input binary_charge_cable
    state: "on"

action:
  - variables:
      consumo: "{{ states(input_sensor_consumo) | float(0) }}"
      amps_atual: "{{ states(input_number_charge_current) | int(0) }}"
      max_amps: !input max_amps
      min_amps: !input min_amps
  - choose:
      # Se estamos exportando (consumo < 0) e ainda não chegamos ao máximo, aumenta corrente
      - conditions: "{{ consumo < 0 and amps_atual < max_amps }}"
        sequence:
          - service: number.set_value
            target:
              entity_id: !input number_charge_current
            data:
              value: "{{ [amps_atual + 1, max_amps] | min }}"
      # Se consumo positivo e corrente > min, diminui corrent
